name: Parse issue form
on:
  issues:
    types:
      - opened     
      - reopened

jobs:
  extract_issue_data:
    name: Extract issue data
    if: contains(github.event.issue.labels.*.name, 'runner')

    runs-on: ubuntu-latest

    outputs:
      runner_payload: ${{ steps.issue_payload.outputs.payload }}

    steps:
      - name: Extract Issue Payload Data
        id: issue_payload
        uses: peter-murray/issue-forms-body-parser@v1.1.0
        with:
          separator: '###'
          issue_id: ${{ github.event.issue.number }}
          label_marker_start: ' '
          label_marker_end: ':' 
      
      - name: Show parsed data JSON
        run: |
          echo "${{ steps.issue_payload.outputs.payload }}"
          
      - name: Get Token
        id: get_token
        uses: peter-murray/workflow-application-token-action@v1
        with:
          application_id: ${{ secrets.APPLICATION_ID }}
          application_private_key: ${{ secrets.APPLICATION_PRIVATE_KEY }}
          
      - name: GitHub Script
        uses: actions/github-script@v6.1.0
        with:
          github-token: ${{ steps.get_token.outputs.token }}
          script: |
            github.actions.createRegistrationTokenForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo
            }).then(resp => {
              console.log(resp)
            })
          

